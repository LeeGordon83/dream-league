@model PagedList.IPagedList<DreamLeague.Models.Player>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Players";
}

<h2>Players</h2>

@if (User.IsInRole("Administrator"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@using (Html.BeginForm("Index", "Player", FormMethod.Get))
{
    <div class="form-group">
        <input type="text" name="searchString" class="form-control input-sm" placeholder="Search" value="@ViewBag.CurrentFilter">
    </div>

    <div class="form-group">
        <div class="btn-group btn-group-sm">
            <button type="submit" class="btn btn-default btn-success">Search</button>
            @Html.ActionLink("DEF", "Index", new { searchString = ViewBag.CurrentFilter, searchPosition = "Defenders" }, new { @class = "btn btn-primary" })
            @Html.ActionLink("MID", "Index", new { searchString = ViewBag.CurrentFilter, searchPosition = "Midfielders" }, new { @class = "btn btn-primary" })
            @Html.ActionLink("FWD", "Index", new { searchString = ViewBag.CurrentFilter, searchPosition = "Forwards" }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Reset", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
}

@if (Model.Count > 0)
{
    <table class="table table-hover table-striped small">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = "Name", currentFilter = ViewBag.CurrentFilter, searchPosition = ViewBag.SearchPosition })
            </th>
            <th>
                @Html.ActionLink("Position", "Index", new { sortOrder = "Position", currentFilter = ViewBag.CurrentFilter, searchPosition = ViewBag.SearchPosition })
            </th>
            <th>
                @Html.ActionLink("Team", "Index", new { sortOrder = "Team", currentFilter = ViewBag.CurrentFilter, searchPosition = ViewBag.SearchPosition })
            </th>
            <th>@Html.DisplayName("Current Team")</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.FullName, "Details", new { id = item.PlayerId })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Team.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManagerPlayers.FirstOrDefault().Manager.Name)
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.PlayerId })@: |
                        @Html.ActionLink("Delete", "Delete", new { id = item.PlayerId })
                    }
                </td>
            </tr>
        }

    </table>

    <br />
    @:Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount




    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, searchPosition = ViewBag.SearchPosition }))
}
else
{
    <div class="alert alert-info">
        No players available.
    </div>
}